Tools in Data Science
Tools in Data Science
1. Development Tools
Editor: VS Code
AI Code Editors: GitHub Copilot
Python tools: uv
JavaScript tools: npx
Unicode
Browser: DevTools
CSS Selectors
JSON
Terminal: Bash
AI Terminal Tools: llm
Spreadsheet: Excel, Google Sheets
Database: SQLite
Version Control: Git, GitHub
2. Deployment Tools
Markdown
Images: Compression
Static hosting: GitHub Pages
Notebooks: Google Colab
Serverless hosting: Vercel
CI/CD: GitHub Actions
Containers: Docker, Podman
DevContainers: GitHub Codespaces
Tunneling: ngrok
CORS
REST APIs
Web Framework: FastAPI
Authentication: Google Auth
Local LLMs: Ollama
3. Large Language Models
Prompt engineering
TDS TA Instructions
TDS GPT Reviewer
LLM Sentiment Analysis
LLM Text Extraction
Base 64 Encoding
Vision Models
Embeddings
Multimodal Embeddings
Topic modeling
Vector databases
RAG with the CLI)
Hybrid RAG with TypeSense
Function Calling
LLM Agents
LLM Image Generation
Gemini Flash Experimental Image Generation and Editing APIs
OpenAI gpt-image-1 Model for Image Generation and Editing
LLM Speech
LLM Evals
Project 1
4. Data Sourcing
Scraping with Excel
Scraping with Google Sheets
Crawling with the CLI
BBC Weather API with Python
Scraping IMDb with JavaScript
Nominatim API with Python
Wikipedia Data with Python
Scraping PDFs with Tabula
Convert PDFs to Markdown
Convert HTML to Markdown
LLM Website Scraping
LLM Video Screen-Scraping
Web Automation with Playwright
Scheduled Scraping with GitHub Actions
Scraping emarketer.com
Scraping: Live Sessions
5. Data Preparation
Data Cleansing in Excel
Data Transformation in Excel
Splitting Text in Excel
Data Aggregation in Excel
Data Preparation in the Shell
Data Preparation in the Editor
Data Preparation in DuckDB
Cleaning Data with OpenRefine
Parsing JSON
Data Transformation with dbt
Transforming Images
Extracting Audio and Transcripts
6. Data Analysis
Correlation with Excel
Regression with Excel
Forecasting with Excel
Outlier Detection with Excel
Data Analysis with Python
Data Analysis with SQL
Data Analysis with Datasette
Data Analysis with DuckDB
Data Analysis with ChatGPT
Geospatial Analysis with Excel
Geospatial Analysis with Python
Geospatial Analysis with QGIS
Network Analysis in Python
Project 2
7. Data Visualization
Visualizing Forecasts with Excel
Visualizing Animated Data with PowerPoint
Visualizing Animated Data with Flourish
Visualizing Network Data with Kumu
Visualizing Charts with Excel
Data Visualization with Seaborn
Data Visualization with ChatGPT
Actor Network Visualization
RAWgraphs
Data Storytelling
Narratives with LLMs
Interactive Notebooks: Marimo
HTML Slides: RevealJS
Markdown Presentations: Marp
Gemini Flash Experimental Image Generation and Editing APIs
In March 2025, Google introduced native image generation and editing capabilities in the Gemini 2.0 Flash Experimental model. You can now generate and iteratively edit images via a single REST endpoint (
Experiment with Gemini 2.0 Flash native image generation
,
Generate images | Gemini API | Google AI for Developers
).
(
How to use Latest Gemini 2.0 Native Image Generation with API?
)
Simple image generation
To generate a basic image, send a POST request to the
generateContent
method:
curl
"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generation:generateContent?key=
$GEMINI_API_KEY
"
\
-H
"Content-Type: application/json"
\
-X
POST
\
-d
'{
    "contents": [{ "parts": [{ "text": "A serene landscape of rolling hills at sunrise, digital art" }] }],
    "generationConfig": { "responseModalities": ["TEXT", "IMAGE"] }
  }'
|
jq
-r
'.candidates[].content.parts[] | select(.inlineData) | .inlineData.data'
|
base64
--decode
>
image.png
Copy to clipboard
Error
Copied
Replace
$GEMINI_API_KEY
with your key. (
Gemini API | Google AI for Developers
)
Generation options
You can tweak the output with these
generationConfig
parameters:
responseModalities
: Modalities to return (
TEXT
,
IMAGE
).
temperature
(0.0–2.0): Controls randomness (default 1.0).
topP
(0.0–1.0): Nucleus sampling threshold.
topK
: Token selection cutoff.
maxOutputTokens
: Max tokens for text parts.
stopSequences
: Sequences to end generation.
seed
: For reproducibility.
curl
"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generation:generateContent?key=
$GEMINI_API_KEY
"
\
-H
"Content-Type: application/json"
\
-X
POST
\
-d
'{
    "contents": [{ "parts": [{ "text": "A futuristic city skyline at dusk, neon lights" }] }],
    "generationConfig": {
      "responseModalities": ["TEXT", "IMAGE"],
      "temperature": 0.7,
      "topP": 0.9,
      "maxOutputTokens": 1024
    }
  }'
|
jq
-r
'.candidates[].content.parts[] | select(.inlineData) | .inlineData.data'
|
base64
--decode
>
image.png
Copy to clipboard
Error
Copied
Image Generation Docs
Simple image editing
To edit an existing image, include it in the
contents
as
inlineData
(base64-encoded):
curl
"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generation:generateContent?key=
$GEMINI_API_KEY
"
\
-H
'Content-Type: application/json'
\
-d
'{
      "contents": [{
        "parts":[
            {"text": "Replace the background with a starry night sky"},
            {"inline_data": {"mime_type":"image/jpeg", "data": "'
$(
base64
-w
0
cat.jpg
)
'"}}
        ]
      }],
      "generationConfig": {"responseModalities": ["TEXT", "IMAGE"]}
    }'
|
jq
-r
'.candidates[].content.parts[] | select(.inlineData) | .inlineData.data'
|
base64
--decode
>
image.png
Copy to clipboard
Error
Copied
Image Editing Docs
Editing options
Editing requests support:
inlineData
: Embed raw image bytes.
fileData
: Reference public URLs.
All
generationConfig
options listed above.
safetySettings
: Per-request safety rules.
Multi-turn edits by repeating
contents
in conversation history.
Costs and optimization
Gemini 2.0 Flash Experimental uses token-based billing:
Input
(text/image/video): free tier, then $0.10 per 1M tokens.
Output
(text/image): free tier, then $0.40 per 1M tokens.
Per-image flat cost
for Pro models: ~$0.001315 /image (
Gemini Developer API Pricing | Gemini API | Google AI for Developers
,
Solved: Re: Outdated Gemini Pro image pricing? By tile, or…
).
To optimize:
Use smaller image sizes by setting
responseMimeType
.
Cache or reuse prompts with
cachedContent
.
Lower
candidateCount
or
temperature
for fewer tokens.
OpenAI gpt-image-1 Model for Image Generation and Editing
OpenAI’s GPT Image 1 (
gpt-image-1
) is a state-of-the-art multimodal model released on April 23, 2025, for high-fidelity image creation and editing.
Simple image generation
Use the Image Generations endpoint:
curl
'https://api.openai.com/v1/images/generations'
\
-H
'Content-Type: application/json'
\
-H
"Authorization: Bearer
$OPENAI_API_KEY
"
\
-d
'{
    "model": "gpt-image-1",
    "prompt": "A whimsical illustration of a cat playing chess",
    "n": 1,
    "size": "1024x1024"
  }'
>
image.png
Copy to clipboard
Error
Copied
(
Generate Image | OpenAI API - Postman
)
Generation options
Adjust these JSON parameters:
model
:
gpt-image-1
(default).
prompt
: Text description.
n
: Number of images.
size
:
256x256
,
512x512
, or
1024x1024
.
response_format
:
"url"
(default) or
"b64_json"
.
{
"model"
:
"gpt-image-1"
,
"prompt"
:
"..."
,
"n"
:
2
,
"size"
:
"512x512"
,
"response_format"
:
"b64_json"
}
Copy to clipboard
Error
Copied
Simple image editing
Use the Edits endpoint with an image and a mask:
curl
https://api.openai.com/v1/images/edits
\
-H
'Content-Type: application/json'
\
-H
"Authorization: Bearer
$OPENAI_API_KEY
"
\
-d
'{
    "model": "gpt-image-1",
    "image": "data:image/png;base64,<BASE64_IMAGE>",
    "mask": "data:image/png;base64,<BASE64_MASK>",
    "prompt": "Add a rainbow in the sky above the mountains",
    "n": 1,
    "size": "1024x1024"
  }'
Copy to clipboard
Error
Copied
(
curl - What’s the correct URL to test OpenAI API? - Stack Overflow
)
Editing options
Editing requests accept:
image
: Original image (base64 or URL).
mask
: PNG mask for inpainting.
prompt
: Instruction for the edit.
n
,
size
,
response_format
as above.
Optional
user
field for attribution.
Costs and optimization
GPT Image 1 pricing (per 1M tokens): text input $5, image input $10, image output $40. Rough per-image costs:
Low quality: ~$0.02
Medium quality: ~$0.07
High quality: ~$0.19 (
OpenAI’s GPT-Image-1 API — Create Stunning Images for Your Apps!
,
Usage of gpt-image-1 is priced per token, with … - Hacker News
)
To optimize:
Choose smaller sizes (
256x256
).
Generate fewer images (
n:1
).
Use
response_format:"url"
to reduce payload.
Cache frequent prompts or images.
Previous
LLM Agents
Next
LLM Speech