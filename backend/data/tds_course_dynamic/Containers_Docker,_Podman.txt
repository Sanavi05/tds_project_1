Tools in Data Science
Tools in Data Science
1. Development Tools
Editor: VS Code
AI Code Editors: GitHub Copilot
Python tools: uv
JavaScript tools: npx
Unicode
Browser: DevTools
CSS Selectors
JSON
Terminal: Bash
AI Terminal Tools: llm
Spreadsheet: Excel, Google Sheets
Database: SQLite
Version Control: Git, GitHub
2. Deployment Tools
Markdown
Images: Compression
Static hosting: GitHub Pages
Notebooks: Google Colab
Serverless hosting: Vercel
CI/CD: GitHub Actions
Containers: Docker, Podman
Containers: Docker, Podman
DevContainers: GitHub Codespaces
Tunneling: ngrok
CORS
REST APIs
Web Framework: FastAPI
Authentication: Google Auth
Local LLMs: Ollama
3. Large Language Models
Prompt engineering
TDS TA Instructions
TDS GPT Reviewer
LLM Sentiment Analysis
LLM Text Extraction
Base 64 Encoding
Vision Models
Embeddings
Multimodal Embeddings
Topic modeling
Vector databases
RAG with the CLI)
Hybrid RAG with TypeSense
Function Calling
LLM Agents
LLM Image Generation
LLM Speech
LLM Evals
Project 1
4. Data Sourcing
Scraping with Excel
Scraping with Google Sheets
Crawling with the CLI
BBC Weather API with Python
Scraping IMDb with JavaScript
Nominatim API with Python
Wikipedia Data with Python
Scraping PDFs with Tabula
Convert PDFs to Markdown
Convert HTML to Markdown
LLM Website Scraping
LLM Video Screen-Scraping
Web Automation with Playwright
Scheduled Scraping with GitHub Actions
Scraping emarketer.com
Scraping: Live Sessions
5. Data Preparation
Data Cleansing in Excel
Data Transformation in Excel
Splitting Text in Excel
Data Aggregation in Excel
Data Preparation in the Shell
Data Preparation in the Editor
Data Preparation in DuckDB
Cleaning Data with OpenRefine
Parsing JSON
Data Transformation with dbt
Transforming Images
Extracting Audio and Transcripts
6. Data Analysis
Correlation with Excel
Regression with Excel
Forecasting with Excel
Outlier Detection with Excel
Data Analysis with Python
Data Analysis with SQL
Data Analysis with Datasette
Data Analysis with DuckDB
Data Analysis with ChatGPT
Geospatial Analysis with Excel
Geospatial Analysis with Python
Geospatial Analysis with QGIS
Network Analysis in Python
Project 2
7. Data Visualization
Visualizing Forecasts with Excel
Visualizing Animated Data with PowerPoint
Visualizing Animated Data with Flourish
Visualizing Network Data with Kumu
Visualizing Charts with Excel
Data Visualization with Seaborn
Data Visualization with ChatGPT
Actor Network Visualization
RAWgraphs
Data Storytelling
Narratives with LLMs
Interactive Notebooks: Marimo
HTML Slides: RevealJS
Markdown Presentations: Marp
Containers: Docker, Podman
Docker
and
Podman
are containerization tools that package your application and its dependencies into a standardized unit for software development and deployment.
Docker is the industry standard. Podman is compatible with Docker and has better security (and a slightly more open license). In this course, we recommend Podman but Docker works in the same way.
Initialize the container engine:
podman
machine init
podman
machine start
Copy to clipboard
Error
Copied
Common Operations. (You can use
docker
instead of
podman
in the same way.)
# Pull an image
podman
pull python:3.11-slim
# Run a container
podman
run
-it
python:3.11-slim
# List containers
podman
ps
-a
# Stop container
podman
stop container_id
# Scan image for vulnerabilities
podman
scan myapp:latest
# Remove container
podman
rm
container_id
# Remove all stopped containers
podman
container prune
Copy to clipboard
Error
Copied
You can create a
Dockerfile
to build a container image. Hereâ€™s a sample
Dockerfile
that converts a Python script into a container image.
FROM python:3.11-slim
# Set working directory
WORKDIR /app
# Typically, you would use `COPY . .` to copy files from the host machine,
# but here we're just using a simple script.
RUN echo 'print("Hello, world!")' > app.py
# Run the script
CMD ["python", "app.py"]
Copy to clipboard
Error
Copied
To build, run, and deploy the container, run these commands:
# Create an account on https://hub.docker.com/ and then login
podman
login docker.io
# Build and run the container
podman
build
-t
py-hello
.
podman
run
-it
py-hello
# Push the container to Docker Hub. Replace $DOCKER_HUB_USERNAME with your Docker Hub username.
podman
push py-hello:latest docker.io/
$DOCKER_HUB_USERNAME
/py-hello
# Push adding a specific tag, e.g. dev
TAG
=
dev
podman
push py-hello docker.io/
$DOCKER_HUB_USERNAME
/py-hello:
$TAG
Copy to clipboard
Error
Copied
Tools:
Dive
: Explore image layers
Skopeo
: Work with container images
Trivy
: Security scanner
Optional: For Windows, see
WSL 2 with Docker getting started
Previous
CI/CD: GitHub Actions
Next
DevContainers: GitHub Codespaces