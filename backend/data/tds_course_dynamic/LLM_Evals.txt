Tools in Data Science
Tools in Data Science
1. Development Tools
Editor: VS Code
AI Code Editors: GitHub Copilot
Python tools: uv
JavaScript tools: npx
Unicode
Browser: DevTools
CSS Selectors
JSON
Terminal: Bash
AI Terminal Tools: llm
Spreadsheet: Excel, Google Sheets
Database: SQLite
Version Control: Git, GitHub
2. Deployment Tools
Markdown
Images: Compression
Static hosting: GitHub Pages
Notebooks: Google Colab
Serverless hosting: Vercel
CI/CD: GitHub Actions
Containers: Docker, Podman
DevContainers: GitHub Codespaces
Tunneling: ngrok
CORS
REST APIs
Web Framework: FastAPI
Authentication: Google Auth
Local LLMs: Ollama
3. Large Language Models
Prompt engineering
TDS TA Instructions
TDS GPT Reviewer
LLM Sentiment Analysis
LLM Text Extraction
Base 64 Encoding
Vision Models
Embeddings
Multimodal Embeddings
Topic modeling
Vector databases
RAG with the CLI)
Hybrid RAG with TypeSense
Function Calling
LLM Agents
LLM Image Generation
LLM Speech
LLM Evals
LLM Evaluations with PromptFoo
Project 1
4. Data Sourcing
Scraping with Excel
Scraping with Google Sheets
Crawling with the CLI
BBC Weather API with Python
Scraping IMDb with JavaScript
Nominatim API with Python
Wikipedia Data with Python
Scraping PDFs with Tabula
Convert PDFs to Markdown
Convert HTML to Markdown
LLM Website Scraping
LLM Video Screen-Scraping
Web Automation with Playwright
Scheduled Scraping with GitHub Actions
Scraping emarketer.com
Scraping: Live Sessions
5. Data Preparation
Data Cleansing in Excel
Data Transformation in Excel
Splitting Text in Excel
Data Aggregation in Excel
Data Preparation in the Shell
Data Preparation in the Editor
Data Preparation in DuckDB
Cleaning Data with OpenRefine
Parsing JSON
Data Transformation with dbt
Transforming Images
Extracting Audio and Transcripts
6. Data Analysis
Correlation with Excel
Regression with Excel
Forecasting with Excel
Outlier Detection with Excel
Data Analysis with Python
Data Analysis with SQL
Data Analysis with Datasette
Data Analysis with DuckDB
Data Analysis with ChatGPT
Geospatial Analysis with Excel
Geospatial Analysis with Python
Geospatial Analysis with QGIS
Network Analysis in Python
Project 2
7. Data Visualization
Visualizing Forecasts with Excel
Visualizing Animated Data with PowerPoint
Visualizing Animated Data with Flourish
Visualizing Network Data with Kumu
Visualizing Charts with Excel
Data Visualization with Seaborn
Data Visualization with ChatGPT
Actor Network Visualization
RAWgraphs
Data Storytelling
Narratives with LLMs
Interactive Notebooks: Marimo
HTML Slides: RevealJS
Markdown Presentations: Marp
LLM Evaluations with PromptFoo
Test-drive your prompts and models with automated, reliable evaluations.
PromptFoo is a test-driven development framework for LLMs:
Developer-first
: Fast CLI with live reload & caching (
promptfoo.dev
)
Multi-provider
: Works with OpenAI, Anthropic, HuggingFace, Ollama & more (
GitHub
)
Assertions
: Built‑in (
contains
,
equals
) & model‑graded (
llm-rubric
) (
docs
)
CI/CD
: Integrate evals into pipelines for regression safety (
CI/CD guide
)
To run PromptFoo:
Install Node.js & npm (
nodejs.org
)
Set up your
OPENAI_API_KEY
environment variable
Configure
promptfooconfig.yaml
. Below is an example:
prompts
:
-
|
Summarize this text: "{{text}}"
-
|
Please write a concise summary of: "{{text}}"
providers
:
-
openai
:
gpt
-
3.5
-
turbo
-
openai
:
gpt
-
4
tests
:
-
name
:
summary_test
vars
:
text
:
"PromptFoo is an open-source CLI and library for evaluating and testing LLMs with assertions, caching, and matrices."
assertions
:
-
contains-all
:
values
:
-
"open-source"
-
"LLMs"
-
llm-rubric
:
instruction
:
|
Score the summary from 1 to 5 for:
            - relevance: captures the main info?
            - clarity: wording is clear and concise?
schema
:
type
:
object
properties
:
relevance
:
type
:
number
minimum
:
1
maximum
:
5
clarity
:
type
:
number
minimum
:
1
maximum
:
5
required
:
[
relevance
,
clarity
]
additionalProperties
:
false
commandLineOptions
:
cache
:
true
Copy to clipboard
Error
Copied
Now, you can run the evaluations and see the results.
# Execute all tests
npx
-y
promptfoo
eval
-c
promptfooconfig.yaml
# List past evaluations
npx
-y
promptfoo list evals
# Launch interactive results viewer on port 8080
npx
-y
promptfoo view
-p
8080
Copy to clipboard
Error
Copied
PromptFoo caches API responses by default (TTL 14 days). You can disable it with
--no-cache
or clear it.
# Disable cache for this run
echo
y
|
promptfoo
eval
--no-cache
-c
promptfooconfig.yaml
# Clear all cache
echo
y
|
promptfoo cache
clear
Copy to clipboard
Error
Copied
Previous
LLM Speech
Next
Project 1