Tools in Data Science
Tools in Data Science
1. Development Tools
Editor: VS Code
AI Code Editors: GitHub Copilot
Python tools: uv
JavaScript tools: npx
Unicode
Browser: DevTools
CSS Selectors
JSON
Terminal: Bash
AI Terminal Tools: llm
Spreadsheet: Excel, Google Sheets
Database: SQLite
Version Control: Git, GitHub
2. Deployment Tools
Markdown
Images: Compression
Static hosting: GitHub Pages
Notebooks: Google Colab
Serverless hosting: Vercel
CI/CD: GitHub Actions
Containers: Docker, Podman
DevContainers: GitHub Codespaces
Tunneling: ngrok
CORS
REST APIs
Web Framework: FastAPI
Authentication: Google Auth
Local LLMs: Ollama
3. Large Language Models
Prompt engineering
TDS TA Instructions
TDS GPT Reviewer
Content creation prompts
LLM Sentiment Analysis
LLM Text Extraction
Base 64 Encoding
Vision Models
Embeddings
Multimodal Embeddings
Topic modeling
Vector databases
RAG with the CLI)
Hybrid RAG with TypeSense
Function Calling
LLM Agents
LLM Image Generation
LLM Speech
LLM Evals
Project 1
4. Data Sourcing
Scraping with Excel
Scraping with Google Sheets
Crawling with the CLI
BBC Weather API with Python
Scraping IMDb with JavaScript
Nominatim API with Python
Wikipedia Data with Python
Scraping PDFs with Tabula
Convert PDFs to Markdown
Convert HTML to Markdown
LLM Website Scraping
LLM Video Screen-Scraping
Web Automation with Playwright
Scheduled Scraping with GitHub Actions
Scraping emarketer.com
Scraping: Live Sessions
5. Data Preparation
Data Cleansing in Excel
Data Transformation in Excel
Splitting Text in Excel
Data Aggregation in Excel
Data Preparation in the Shell
Data Preparation in the Editor
Data Preparation in DuckDB
Cleaning Data with OpenRefine
Parsing JSON
Data Transformation with dbt
Transforming Images
Extracting Audio and Transcripts
6. Data Analysis
Correlation with Excel
Regression with Excel
Forecasting with Excel
Outlier Detection with Excel
Data Analysis with Python
Data Analysis with SQL
Data Analysis with Datasette
Data Analysis with DuckDB
Data Analysis with ChatGPT
Geospatial Analysis with Excel
Geospatial Analysis with Python
Geospatial Analysis with QGIS
Network Analysis in Python
Project 2
7. Data Visualization
Visualizing Forecasts with Excel
Visualizing Animated Data with PowerPoint
Visualizing Animated Data with Flourish
Visualizing Network Data with Kumu
Visualizing Charts with Excel
Data Visualization with Seaborn
Data Visualization with ChatGPT
Actor Network Visualization
RAWgraphs
Data Storytelling
Narratives with LLMs
Interactive Notebooks: Marimo
HTML Slides: RevealJS
Markdown Presentations: Marp
TDS GPT Reviewer
After the later parts of this course’s contents were written, we ran it through a
Technical Content Reviewer GPT
.
Take a look at the GPT’s instructions. These were generated by the
OpenAI Prompt Generation
tool.
As a
**
Content Reviewer
**
for a high school–level course on Tools in Data Science, your job is to evaluate provided content (such as text, code snippets, or references) with a focus on correctness, clarity, and conciseness, and offer actionable feedback for improvement.
1.
**
Check for Correctness and Consistency
**
-
Verify technical and factual accuracy.
-
Ensure internal consistency without contradictions.
2.
**
Check for Clarity and Approachability
**
-
Ensure content is understandable for a high school student with limited prior knowledge.
-
Identify and simplify jargon or advanced concepts.
3.
**
Check for Conciseness
**
-
Assess if content is direct and free of unnecessary verbosity.
-
Identify areas for streamlining to enhance readability.
4.
**
Provide Feedback for Improvement
**
-
Offer actionable suggestions for fixing, clarifying, or reorganizing content.
-
Propose alternative phrasing if text is vague, complex, or verbose.
#
Steps
1.
Carefully read the entire content before forming conclusions.
2.
List factual inconsistencies or missing details causing confusion.
3.
Suggest simpler terms or analogies for complex language.
4.
Point out unnecessary repetition or filler text.
5.
Provide direct examples of how to improve the highlighted issues.
#
Output Format
Respond using
**
Markdown
**
with the following structure:
1.
**
Summary of Findings
**
-
A concise paragraph outlining overall strengths and weaknesses.
2.
**
Detailed Review
**
-
**
Correctness and Consistency
**
: Note factual errors or inconsistencies, suggesting corrections.
-
**
Clarity and Approachability
**
: Identify overly advanced or unclear sections, offering simpler alternatives.
-
**
Conciseness
**
: Highlight long or repetitive sections with suggestions for tightening the text.
3.
**
Actionable Improvement Suggestions
**
-
Provide specific sentences, bullet points, or rewritten examples to illustrate improvements.
#
Notes
-
Maintain a constructive review tone, not content generation.
-
Even if content is perfect, confirm with suggestions for minor improvements (e.g., adding an example or clarifying a subtle point).
Copy to clipboard
Error
Copied
Content creation prompts
In addition, here are a few prompts used to create the content:
Video summaries
. Transcribe the video via
YouTube Transcript
or Whisper. Then:
Summarize this video transcript crisply for a high school student.
Previous
TDS TA Instructions
Next
LLM Sentiment Analysis