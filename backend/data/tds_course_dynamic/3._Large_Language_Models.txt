Tools in Data Science
Tools in Data Science
1. Development Tools
Editor: VS Code
AI Code Editors: GitHub Copilot
Python tools: uv
JavaScript tools: npx
Unicode
Browser: DevTools
CSS Selectors
JSON
Terminal: Bash
AI Terminal Tools: llm
Spreadsheet: Excel, Google Sheets
Database: SQLite
Version Control: Git, GitHub
2. Deployment Tools
Markdown
Images: Compression
Static hosting: GitHub Pages
Notebooks: Google Colab
Serverless hosting: Vercel
CI/CD: GitHub Actions
Containers: Docker, Podman
DevContainers: GitHub Codespaces
Tunneling: ngrok
CORS
REST APIs
Web Framework: FastAPI
Authentication: Google Auth
Local LLMs: Ollama
3. Large Language Models
Prompt engineering
TDS TA Instructions
TDS GPT Reviewer
LLM Sentiment Analysis
LLM Text Extraction
Base 64 Encoding
Vision Models
Embeddings
Multimodal Embeddings
Topic modeling
Vector databases
RAG with the CLI)
Hybrid RAG with TypeSense
Function Calling
LLM Agents
LLM Image Generation
LLM Speech
LLM Evals
AI Proxy - Jan 2025
Project 1
4. Data Sourcing
Scraping with Excel
Scraping with Google Sheets
Crawling with the CLI
BBC Weather API with Python
Scraping IMDb with JavaScript
Nominatim API with Python
Wikipedia Data with Python
Scraping PDFs with Tabula
Convert PDFs to Markdown
Convert HTML to Markdown
LLM Website Scraping
LLM Video Screen-Scraping
Web Automation with Playwright
Scheduled Scraping with GitHub Actions
Scraping emarketer.com
Scraping: Live Sessions
5. Data Preparation
Data Cleansing in Excel
Data Transformation in Excel
Splitting Text in Excel
Data Aggregation in Excel
Data Preparation in the Shell
Data Preparation in the Editor
Data Preparation in DuckDB
Cleaning Data with OpenRefine
Parsing JSON
Data Transformation with dbt
Transforming Images
Extracting Audio and Transcripts
6. Data Analysis
Correlation with Excel
Regression with Excel
Forecasting with Excel
Outlier Detection with Excel
Data Analysis with Python
Data Analysis with SQL
Data Analysis with Datasette
Data Analysis with DuckDB
Data Analysis with ChatGPT
Geospatial Analysis with Excel
Geospatial Analysis with Python
Geospatial Analysis with QGIS
Network Analysis in Python
Project 2
7. Data Visualization
Visualizing Forecasts with Excel
Visualizing Animated Data with PowerPoint
Visualizing Animated Data with Flourish
Visualizing Network Data with Kumu
Visualizing Charts with Excel
Data Visualization with Seaborn
Data Visualization with ChatGPT
Actor Network Visualization
RAWgraphs
Data Storytelling
Narratives with LLMs
Interactive Notebooks: Marimo
HTML Slides: RevealJS
Markdown Presentations: Marp
Large Language Models
This module covers the practical usage of large language models (LLMs).
LLMs incur a cost.
For the May 2025 batch, use
aipipe.org
as a proxy.
Emails with
@ds.study.iitm.ac.in
get a
$1 per calendar month
allowance. (Don’t exceed that.)
Read the
AI Pipe documentation
to learn how to use it. But in short:
Replace
OPENAI_BASE_URL
, i.e.
https://api.openai.com/v1
with
https://aipipe.org/openrouter/v1...
or
https://aipipe.org/openai/v1...
Replace
OPENAI_API_KEY
with the
AIPIPE_TOKEN
Replace model names, e.g.
gpt-4.1-nano
, with
openai/gpt-4.1-nano
For example, let’s use
Gemini 2.0 Flash Lite
via
OpenRouter
for chat completions and
Text Embedding 3 Small
via
OpenAI
for embeddings:
curl
https://aipipe.org/openrouter/v1/chat/completions
\
-H
"Content-Type: application/json"
\
-H
"Authorization: Bearer
$AIPIPE_TOKEN
"
\
-d
'{
    "model": "google/gemini-2.0-flash-lite-001",
    "messages": [{ "role": "user", "content": "What is 2 + 2?"} }]
  }'
curl
https://aipipe.org/openai/v1/embeddings
\
-H
"Content-Type: application/json"
\
-H
"Authorization: Bearer
$AIPIPE_TOKEN
"
\
-d
'{ "model": "text-embedding-3-small", "input": "What is 2 + 2?" }'
Copy to clipboard
Error
Copied
Or using
llm
:
llm keys
set
openai
--value
$AIPIPE_TOKEN
export
OPENAI_BASE_URL
=
https://aipipe.org/openrouter/v1
llm
'What is 2 + 2?'
-m
openrouter/google/gemini-2.0-flash-lite-001
export
OPENAI_BASE_URL
=
https://aipipe.org/openai/v1
llm embed
-c
'What is 2 + 2'
-m
3
-small
Copy to clipboard
Error
Copied
For a 50% discount
(but slower speed), use
Flex processing
by adding
service_tier: "flex"
to your JSON request.
AI Proxy - Jan 2025
For the Jan 2025 batch, we had created API keys for everyone with an
iitm.ac.in
email to use
gpt-4o-mini
and
text-embedding-3-small
. Your usage is limited to
$1 per calendar month
for this course. Don’t exceed that.
Use
AI Proxy
instead of OpenAI. Specifically:
Replace your API to
https://api.openai.com/...
with
https://aiproxy.sanand.workers.dev/openai/...
Replace the
OPENAI_API_KEY
with the
AIPROXY_TOKEN
that someone will give you.
Previous
Local LLMs: Ollama
Next
Prompt engineering